{'TMP': 'C:\\Users\\Daiki\\AppData\\Local\\Temp', 'PYTHONIOENCODING': 'UTF-8', 'COMPUTERNAME': 'DAIKI-PC', 'VS140COMNTOOLS': 'C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\Common7\\Tools\\', 'USERDOMAIN': 'DAIKI-PC', 'PSMODULEPATH': 'C:\\WINDOWS\\system32\\WindowsPowerShell\\v1.0\\Modules\\', 'PYTHONDONTWRITEBYTECODE': '1', 'COMMONPROGRAMFILES': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_IDENTIFIER': 'Intel64 Family 6 Model 69 Stepping 1, GenuineIntel', 'VBOX_MSI_INSTALL_PATH': 'C:\\Program Files\\Oracle\\VirtualBox\\', 'PROGRAMFILES': 'C:\\Program Files (x86)', 'PROCESSOR_REVISION': '4501', 'PATH': 'C:\\ProgramData\\Oracle\\Java\\javapath;C:\\Program Files (x86)\\Intel\\iCLS Client\\;C:\\Program Files\\Intel\\iCLS Client\\;C:\\WINDOWS\\system32;C:\\WINDOWS;C:\\WINDOWS\\System32\\Wbem;C:\\WINDOWS\\System32\\WindowsPowerShell\\v1.0\\;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\DAL;C:\\Program Files (x86)\\Intel\\Intel(R) Management Engine Components\\IPT;C:\\Program Files\\Intel\\WiFi\\bin\\;C:\\Program Files\\Common Files\\Intel\\WirelessCommon\\;C:\\Program Files\\Microsoft SQL Server\\130\\Tools\\Binn\\;C:\\Program Files (x86)\\Java\\jdk1.8.0_91\\bin;C:\\MinGW\\bin;C:\\Program Files\\Sublime Text 2;C:\\Program Files\\TortoiseSVN\\bin;"C:\\Program Files\\MATLAB\\R2016a\\bin";C:\\Program Files (x86)\\Skype\\Phone\\;C:\\Program Files\\Git\\cmd;C:\\Program Files\\TortoiseGit\\bin;C:\\Users\\Daiki\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts\\;C:\\Users\\Daiki\\AppData\\Local\\Programs\\Python\\Python36-32\\;C:\\Program Files (x86)\\GnuWin32\\bin;C:\\Users\\Daiki\\PycharmProjects\\SecurityProgramming;C:\\Users\\Daiki\\AppData\\Local\\Programs\\Python\\Python35-32;C:\\Python27;C:\\BAT', 'SYSTEMROOT': 'C:\\WINDOWS', 'PYTHONUNBUFFERED': '1', 'PROGRAMFILES(X86)': 'C:\\Program Files (x86)', 'COMSPEC': 'C:\\WINDOWS\\system32\\cmd.exe', 'TERM': 'emacs', 'TEMP': 'C:\\Users\\Daiki\\AppData\\Local\\Temp', 'COMMONPROGRAMFILES(X86)': 'C:\\Program Files (x86)\\Common Files', 'PROCESSOR_ARCHITECTURE': 'x86', 'ALLUSERSPROFILE': 'C:\\ProgramData', 'LOCALAPPDATA': 'C:\\Users\\Daiki\\AppData\\Local', 'HOMEPATH': '\\Users\\Daiki', 'USERDOMAIN_ROAMINGPROFILE': 'DAIKI-PC', 'JAVA_HOME': 'C:\\Program Files (x86)\\Java\\jdk1.8.0_91', 'PROGRAMW6432': 'C:\\Program Files', 'USERNAME': 'Daiki', 'LOGONSERVER': '\\\\DAIKI-PC', 'WINDOWS_TRACING_FLAGS': '3', 'PROGRAMDATA': 'C:\\ProgramData', 'PYTHONPATH': 'C:\\Users\\Daiki\\Desktop\\black-hat-python-jp-support-master\\chapter-07\\git_trojan.py;C:\\Program Files (x86)\\JetBrains\\PyCharm Community Edition 2016.2.3\\helpers\\pydev', 'ONEDRIVE': 'C:\\Users\\Daiki\\Desktop\\OneDrive', 'SESSIONNAME': 'Console', 'PATHEXT': '.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC', 'ASL.LOG': 'Destination=file', 'IDE_PROJECT_ROOTS': 'C:/Users/Daiki/Desktop/black-hat-python-jp-support-master/chapter-07/git_trojan.py', 'IPYTHONENABLE': 'True', 'FP_NO_HOST_CHECK': 'NO', 'WINDIR': 'C:\\WINDOWS', 'UOIPME_REG_PATH': 'C:\\Program Files\\Intel Corporation\\USB over IP', 'WINDOWS_TRACING_LOGFILE': 'C:\\BVTBin\\Tests\\installpackage\\csilogfile.log', 'HOMEDRIVE': 'C:', 'SYSTEMDRIVE': 'C:', 'PYCHARM_HOSTED': '1', 'NUMBER_OF_PROCESSORS': '4', 'APPDATA': 'C:\\Users\\Daiki\\AppData\\Roaming', 'LIBRARY_ROOTS': 'C:/Python27/DLLs;C:/Python27/Lib;C:/Python27/Lib/lib-tk;C:/Python27;C:/Python27/Lib/site-packages;C:/Users/Daiki/.PyCharm2016.2/system/python_stubs/-762174762;C:/Program Files (x86)/JetBrains/PyCharm Community Edition 2016.2.3/helpers/python-skeletons', 'PROCESSOR_LEVEL': '6', 'PROCESSOR_ARCHITEW6432': 'AMD64', 'COMMONPROGRAMW6432': 'C:\\Program Files\\Common Files', 'OS': 'Windows_NT', 'PUBLIC': 'C:\\Users\\Public', 'USERPROFILE': 'C:\\Users\\Daiki'}